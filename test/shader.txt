'precision mediump float;',
'varying vec4 vColor;',
'varying vec2 vTextureCoord;',

'uniform sampler2D u_texture;',
'uniform sampler2D u_normals;',

'uniform vec2 Resolution;',
'uniform vec3 LightPos;',
'uniform vec4 LightColor;',
'uniform vec4 AmbientColor;',
'uniform vec3 Falloff;',

'void main(void) {',
'	vec4 DiffuseColor = texture2D(u_texture, vTextureCoord);',

'	vec3 NormalMap = texture2D(u_normals, vTextureCoord).rgb;',

'	vec3 LightDir = vec3(LightPos.xy - (gl_FragCoord.xy / Resolution.xy), LightPos.z);',

'	LightDir.x *= Resolution.x / Resolution.y;',

'	float D = length(LightDir);',

'	vec3 N = normalize(NormalMap * 2.0 - 1.0);',
'	vec3 L = normalize(LightDir);',

'	vec3 Diffuse = (LightColor.rgb * LightColor.a) * max(dot(N, L), 0.0);',

'	vec3 Ambient = AmbientColor.rgb * AmbientColor.a;',

'	float Attenuation = 1.0 / (Falloff.x + (Falloff.y*D) + (Falloff.z*D*D));',

'	vec3 Intensity = Ambient + Diffuse * Attenuation;',
'	vec3 FinalColor = DiffuseColor.rgb * Intensity;',
'	gl_FragColor = vColor * vec4(FinalColor, DiffuseColor.a);',
'}'